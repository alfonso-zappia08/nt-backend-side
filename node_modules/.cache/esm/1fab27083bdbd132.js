let Schema,model,hash;_3bd‍.x([["default",()=>_3bd‍.o]]);_3bd‍.w("mongoose",[["Schema",["Schema"],function(v){Schema=v}],["model",["model"],function(v){model=v}]]);_3bd‍.w("bcrypt",[["hash",["hash"],function(v){hash=v}]]);

const UserSchema = new Schema({
    avatar: {type: String, default: ""},
    name: {type: String, required: true},
    email: {type: String, required: true},
    password: {type: String, required: true},
    verified: {type: Boolean, default: false},
    verificationCode: {type: String, required: false},
    admin: {type: Boolean, default: false},
}, {timestamps: true}
);
UserSchema.pre('save', async function(next){
    if(this.isModified('password')){
        this.password = await hash(this.password, 10);
        return next();
    }
    return next();
});
UserSchema.methods.generateJWT = async function(){
    
}
const User = model("User", UserSchema);
_3bd‍.d(User); 