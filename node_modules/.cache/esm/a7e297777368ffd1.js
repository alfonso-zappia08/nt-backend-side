let verify,User;_736‍.x([["authGuard",()=>authGuard]]);_736‍.w("jsonwebtoken",[["verify",["verify"],function(v){verify=v}]]);_736‍.w("../models/User",[["default",["User"],function(v){User=v}]]);

       const authGuard = async(req, res, next) =>{
    if(req.headers.authorization && req.headers.authorization.startsWith("Bearer")){
        try {
            const token = req.headers.authorization.split(" ")[1];
            const {id} = verify(token, process.env.JWT_SECRET);
            req.user = await User.findById(id).select('-password');
            next();
        } catch (error) {
            let err = new Error("Non autorizzato, token fallito");
            err.statusCode = 401;
            next(err);
        }
    } else {
        let error = new Error("Non autorizzato, nessun token");
        error.statusCode = 401;
        next(error);
    }
}